[tools]
bun = "latest"
caddy = "latest"

[alias]
# seanmorris php-wasm-builder
php-wasm-build = "bun:php-wasm-builder"

[tasks]
# Install deps
install="bun install"
# Run dev mode (vite)
vite="bun run --bun dev"
# Run dev mode (caddy)
caddy="bun run --bun caddy"

[tasks.seanmorris-build]
alias = "smb"
description = 'Build custom seanmorris-php-wasm (bug "error: cant open patch/php8.2.patch No such file or directory" )'
dir = "{{ config_root }}/js/seanmorris/php-wasm"
tools.bun = "latest"
tools.php-wasm-build = "latest"
#settings.npm.bun = true
run = '''
# 1. Create custom config file
tee .php-wasm-rc <<EOF
# Select a PHP version
PHP_VERSION=8.2
# Build the package to a directory other than the current one (RELATIVE path)
#PHP_DIST_DIR=./public
# Build the extensions to a directory other than the current one (RELATIVE path)
#PHP_ASSET_DIR=./public
# Build the cgi package to a directory other than the current one (RELATIVE path)
#PHP_CGI_DIST_DIR=./public
# Build the cgi package's extensions to a directory other than the current one (RELATIVE path)
#PHP_CGI_ASSET_DIR=./public
# Space separated list of files/directories (ABSOLUTE paths)
# to be included under the /preload directory in the final build.
#PRELOAD_ASSETS=~/my-project/php-scripts ~/other-dir/example.php
# Memory to start the instance with, before growth
#INITIAL_MEMORY=2048MB
# Build with assertions enabled
#ASSERTIONS=0
# Select the optimization level
OPTIMIZATION=3
# Build with extensions
WITH_GD=1
WITH_LIBPNG=1
WITH_LIBJPEG=1
WITH_FREETYPE=1
EOF
# Fetch docker-build environment
php-wasm-build image # bunx php-wasm-builder image
# Clean previous build (if exist)
php-wasm-build clean # bunx php-wasm-builder clean
# Build new one
php-wasm-build build web # bunx php-wasm-builder build web
'''

[tasks.update_soyuka_wasm]
dir = "{{ config_root }}/js/soyuka/php-web"
alias = "spw"
description = 'Build soyuka-php-wasm and update files'
env.PHP_BRANCH = "PHP-8.3.0"
env.LIBXML2_TAG = "v2.9.10"
run = '''
echo "Building: $PHP_BRANCH (libxml2: $LIBXML2_TAG)..."
clean=0 # clean build folder after job is done ?
! test -d soyuka-php-wasm && git clone --depth 1 --single-branch --branch main https://github.com/soyuka/php-wasm soyuka-php-wasm
cd soyuka-php-wasm && docker buildx bake --set default.args.PHP_BRANCH=$PHP_BRANCH --set default.args.LIBXML2_TAG=$LIBXML2_TAG && cp -f build/php-web.mjs ../php-web.mjs && cp -f build/php-web.wasm ../php-web.wasm
test "$clean" -eq 1 && cd .. && test -d soyuka-php-wasm && rm -rf soyuka-php-wasm
'''

[tasks.make_website_data]
dir = "{{ config_root }}"
alias = "mwd"
description = 'Build soyuka-php-wasm DATA'
run = '''
echo "Building APP_DATA: $PHP_BRANCH (libxml2: $LIBXML2_TAG)..."
# cd $(pwd)/app2 && composer install; cd -
docker run --rm \
  -v "$(pwd)/app2:/app" \
  -v "$(pwd)/js/soyuka/php-web/builded_app:/dist/build" \
  -w /dist \
  soyuka/php-wasm:8.2.9 \
  python3 /emsdk/upstream/emscripten/tools/file_packager.py \
    build/php-web.data \
    --use-preload-cache \
    --lz4 \
    --preload /app \
    --js-output=build/php-web.data.js \
    --no-node \
    --exclude '*/.*' \
             '*/*md' \
             '*/castor.php' \
             '*/CHANGELOG' \
             '*/composer.*' \
             '*/doc' \
             '*/docs' \
             '*/LICENSE' \
             '*/README.MD' \
    --export-name=createPhpModule
cd $(pwd)/js/soyuka/php-web/builded_app
# 1.A. Use template file
test -f php-web.data.js && sed '/--pre-js/r php-web.data.js' _php-web.mjs.tpl > php-web.mjs && rm php-web.data.js
# 1.B. Create fresh template file
# cp -f ../8.3.0/php-web.mjs _php-web.mjs.tpl && sed -i '' "s|wasmBinaryFile = new URL('php-web.wasm', import.meta.url).href;|wasmBinaryFile = new URL('../'+document.getElementById('phpVersion').value.split('/').pop()+'/php-web.wasm', import.meta.url).href;|" _php-web.mjs.tpl
# 2. Patch data path
sed -i.bak "s|var REMOTE_PACKAGE_BASE = 'php-web.data';|var REMOTE_PACKAGE_BASE = 'js/soyuka/php-web/builded_app/php-web.data';|" php-web.mjs
test -f php-web.mjs.bak && rm php-web.mjs.bak
'''
