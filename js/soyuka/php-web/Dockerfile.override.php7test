# syntax=docker/dockerfile:1.4
FROM emscripten/emsdk:3.1.35 AS build_tool

RUN apt-get update && \
  apt-get --no-install-recommends -y install \
    build-essential \
    automake \
    autoconf \
    libtool \
    pkgconf \
    python3 \
    bison \
    flex \
    make \
    re2c \
    gdb \
    git \
    file \
    gettext \
    libxml2 \
    libxml2-dev \
    pv

FROM build_tool AS libxml
ARG LIBXML2_TAG=v2.9.10
RUN git clone https://gitlab.gnome.org/GNOME/libxml2.git libxml2 \
    --branch $LIBXML2_TAG \
    --single-branch     \
    --depth 1
WORKDIR /src/libxml2
RUN ./autogen.sh
RUN emconfigure ./configure --prefix=/src/libxml2/build --enable-static --disable-shared --with-python=no --with-threads=no
RUN emmake make -j8
RUN emmake make install

FROM build_tool AS sqlite
ARG SQLITE_VERSION=3390400
ARG SQLITE_YEAR=2022
RUN wget https://sqlite.org/$SQLITE_YEAR/sqlite-amalgamation-$SQLITE_VERSION.zip \
    && unzip sqlite-amalgamation-$SQLITE_VERSION.zip \
    && rm sqlite-amalgamation-$SQLITE_VERSION.zip \
    && mv sqlite-amalgamation-$SQLITE_VERSION sqlite
WORKDIR /src/sqlite
RUN emcc -Oz -DSQLITE_OMIT_LOAD_EXTENSION -DSQLITE_DISABLE_LFS -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_THREADSAFE=0 -DSQLITE_ENABLE_NORMALIZE -c sqlite3.c -o sqlite3.o
RUN emar rcs libsqlite3.a sqlite3.o

FROM build_tool AS php_src
ARG PHP_BRANCH=PHP-7.4.0
RUN git clone https://github.com/php/php-src.git php-src \
    --branch $PHP_BRANCH \
    --single-branch \
    --depth 1

FROM php_src AS php-wasm
ARG WASM_ENVIRONMENT=web
ARG JAVASCRIPT_EXTENSION=mjs
ARG EXPORT_NAME=createPhpModule
ARG MODULARIZE=1
ARG EXPORT_ES6=1
ARG ASSERTIONS=0
ARG OPTIMIZE=-O1
ARG INITIAL_MEMORY=256mb

COPY --from=libxml /src/libxml2/build/ /src/usr
COPY --from=sqlite /src/sqlite/libsqlite3.a /src/usr/lib/
COPY --from=sqlite /src/sqlite/sqlite3.h /src/usr/include/

ENV LIBXML_LIBS="-L/src/usr/lib -lxml2"
ENV LIBXML_CFLAGS="-I/src/usr/include/libxml2"
ENV SQLITE_CFLAGS="-I/src/usr/include"
ENV SQLITE_LIBS="-L/src/usr/lib -lsqlite3"
ENV PKG_CONFIG_PATH="/src/usr/lib/pkgconfig"

WORKDIR /src/php-src
RUN chmod +x ./buildconf || true
RUN ./buildconf --force --verbose
RUN emconfigure ./configure \
    --enable-embed=static \
    --with-layout=GNU \
    --with-libxml \
    --enable-xml \
    --disable-cgi \
    --disable-cli \
    --disable-fiber-asm \
    --disable-all \
    --enable-session \
    --enable-filter \
    --enable-calendar \
    --enable-dom \
    --disable-rpath \
    --disable-phpdbg \
    --without-pear \
    --with-valgrind=no \
    --without-pcre-jit \
    --enable-bcmath \
    --enable-json \
    --enable-ctype \
    --enable-mbstring \
    --disable-mbregex \
    --with-config-file-scan-dir=/src/php \
    --enable-tokenizer \
    --enable-simplexml \
    --enable-pdo \
    --with-pdo-sqlite \
    --with-sqlite3=/src/usr

RUN emmake make -j8

# Compatibilité PHP 7 : libphp7 → libphp
RUN bash -c '[[ -f .libs/libphp7.la ]] && mv .libs/libphp7.la .libs/libphp.la && mv .libs/libphp7.a .libs/libphp.a && mv .libs/libphp7.lai .libs/libphp.lai || exit 0'

COPY ./source /src/source
RUN emcc $OPTIMIZE \
    -I . \
    -I Zend \
    -I main \
    -I TSRM/ \
    -c \
    /src/source/phpw.c \
    -o /src/phpw.o \
    -s ERROR_ON_UNDEFINED_SYMBOLS=0

RUN mkdir /build && emcc $OPTIMIZE \
    -o /build/php-$WASM_ENVIRONMENT.$JAVASCRIPT_EXTENSION \
    --llvm-lto 2 \
    -s EXPORTED_FUNCTIONS='["_phpw", "_phpw_flush", "_phpw_exec", "_phpw_run", "_chdir", "_setenv", "_php_embed_init", "_php_embed_shutdown", "_zend_eval_string"]' \
    -s EXTRA_EXPORTED_RUNTIME_METHODS='["ccall", "UTF8ToString", "lengthBytesUTF8", "FS"]' \
    -s ENVIRONMENT=$WASM_ENVIRONMENT \
    -s FORCE_FILESYSTEM=1 \
    -s MAXIMUM_MEMORY=2gb \
    -s INITIAL_MEMORY=$INITIAL_MEMORY \
    -s ALLOW_MEMORY_GROWTH=1 \
    -s ASSERTIONS=$ASSERTIONS \
    -s ERROR_ON_UNDEFINED_SYMBOLS=0 \
    -s MODULARIZE=$MODULARIZE \
    -s INVOKE_RUN=0 \
    -s LZ4=1 \
    -s EXPORT_ES6=$EXPORT_ES6 \
    -s EXPORT_NAME=$EXPORT_NAME \
    -lidbfs.js \
    /src/phpw.o /src/usr/lib/libsqlite3.a .libs/libphp.a /src/usr/lib/libxml2.a

RUN rm -r /src/*

FROM scratch
COPY --from=php-wasm /build/ .